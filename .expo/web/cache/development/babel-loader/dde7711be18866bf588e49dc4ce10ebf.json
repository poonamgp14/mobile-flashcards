{"ast":null,"code":"var _jsxFileName = \"/Users/poonamgupta/Documents/react/mobile-flashcards/App.js\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport reducer from \"./reducers\";\nimport Decks from \"./components/decks\";\nimport AddDeck from \"./components/addDeck\";\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { FontAwesome, Ionicons } from '@expo/vector-icons';\nimport { purple, white } from \"./utils/colors\";\nvar Tab = Platform.OS === 'ios' ? createBottomTabNavigator() : createMaterialTopTabNavigator();\nexport default function App() {\n  var _this = this;\n\n  return React.createElement(Provider, {\n    store: createStore(reducer),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 6\n    }\n  }, React.createElement(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var color = _ref2.color,\n              size = _ref2.size;\n          var icon;\n\n          if (route.name === 'Add Deck') {\n            icon = React.createElement(FontAwesome, {\n              name: \"plus-square\",\n              size: size,\n              color: color,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 19\n              }\n            });\n          } else if (route.name === 'Decks') {\n            icon = React.createElement(Ionicons, {\n              name: \"ios-bookmarks\",\n              size: size,\n              color: color,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 19\n              }\n            });\n          }\n\n          return icon;\n        }\n      };\n    },\n    tabBarOptions: {\n      activeTintColor: Platform.OS === 'ios' ? purple : white,\n      style: {\n        backgroundColor: Platform.OS === 'ios' ? white : purple\n      },\n      indicatorStyle: {\n        backgroundColor: 'yellow'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Decks\",\n    component: Decks,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Add Deck\",\n    component: AddDeck,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/poonamgupta/Documents/react/mobile-flashcards/App.js"],"names":["StatusBar","React","Component","createStore","Provider","reducer","Decks","AddDeck","createBottomTabNavigator","createMaterialTopTabNavigator","NavigationContainer","FontAwesome","Ionicons","purple","white","Tab","Platform","OS","App","route","tabBarIcon","color","size","icon","name","activeTintColor","style","backgroundColor","indicatorStyle","styles","StyleSheet","create","container","flex","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, { Component } from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport reducer from './reducers'\nimport Decks from './components/decks';\nimport AddDeck from './components/addDeck';\n\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs'\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs'\nimport { NavigationContainer } from '@react-navigation/native'\nimport { FontAwesome, Ionicons } from '@expo/vector-icons'\nimport { purple, white } from './utils/colors'\n\nconst Tab =\n  Platform.OS === 'ios'\n    ? createBottomTabNavigator()\n    : createMaterialTopTabNavigator()\n\nexport default function App() {\n  return (\n    <Provider store={createStore(reducer)}>\n     <NavigationContainer>\n        <Tab.Navigator\n          screenOptions={({ route }) => ({\n            tabBarIcon: ({ color, size }) => {\n              let icon\n              if (route.name === 'Add Deck') {\n                icon = (\n                  <FontAwesome name=\"plus-square\" size={size} color={color} />\n                )\n              } else if (route.name === 'Decks') {\n                icon = (\n                  <Ionicons name=\"ios-bookmarks\" size={size} color={color} />\n                )\n              }\n              return icon\n            },\n          })}\n          tabBarOptions={{\n            activeTintColor: Platform.OS === 'ios' ? purple : white,\n            style: {\n              backgroundColor: Platform.OS === 'ios' ? white : purple,\n            },\n            indicatorStyle: {\n              // Android tab indicator (line at the bottom of the tab)\n              backgroundColor: 'yellow',\n            },\n          }}\n        >\n          <Tab.Screen name=\"Decks\" component={Decks} />\n          <Tab.Screen name=\"Add Deck\" component={AddDeck} />\n        </Tab.Navigator>\n      </NavigationContainer>\n    </Provider>\n    \n  );\n}\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}